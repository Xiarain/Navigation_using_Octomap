<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 
  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
	
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.02" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="/map" />

		<param name="resolution" value="0.03" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="2.0" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/pclPoint_out" />

	    <param name="pointcloud_min_z" type="double" value="0.0" />
    	<param name="pointcloud_max_z" type="double" value="1.0" />

    	<param name="occupancy_min_z" value="0.2" />
		<param name="occupancy_max_z" value="0.8" />
		<param name="ground_filter/plane_distance" value="1.0"/>

		<remap from="projected_map" to="~projected_map" />

	</node>

	<node pkg="rviz" type="rviz" name="rviz" />
<include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>
</launch>
